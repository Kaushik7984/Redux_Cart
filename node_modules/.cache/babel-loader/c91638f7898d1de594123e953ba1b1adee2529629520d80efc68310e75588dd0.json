{"ast":null,"code":"import { uiActions } from \"./uiSlice\";\nexport const fetchCartData = () => {\n  return dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error();\n      }\n      const data = await response.json;\n    };\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n  };\n};\nconst sendRequest = async () => {\n  const response = await fetch(\"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\", {\n    method: \"PUT\",\n    body: JSON.stringify(cart)\n  });\n  if (!response.ok) {\n    throw new Error(\"Sending Cart data failed.\");\n  }\n};\ntry {\n  await sendRequest();\n  dispatch(uiActions.showNotification({\n    status: \"success\",\n    title: \"Success!\",\n    message: \"Sending cart data successfully!\"\n  }));\n} catch (error) {\n  dispatch(uiActions.showNotification({\n    status: \"error\",\n    title: \"Error!\",\n    message: \"Sending cart data failed!\"\n  }));\n}","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","sendCartData","cart","showNotification","status","title","message","sendRequest","method","body","JSON","stringify","error"],"sources":["D:/ReactWithMAX/ReduxCart/src/store/cartAction.js"],"sourcesContent":["import { uiActions } from \"./uiSlice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if(!response.ok){\r\n        throw new Error\r\n      }\r\n      const data = await response.json\r\n    };\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nconst sendRequest = async () => {\r\n  const response = await fetch(\r\n    \"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\",\r\n    {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(cart),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Sending Cart data failed.\");\r\n  }\r\n};\r\n\r\ntry {\r\n  await sendRequest();\r\n\r\n  dispatch(\r\n    uiActions.showNotification({\r\n      status: \"success\",\r\n      title: \"Success!\",\r\n      message: \"Sending cart data successfully!\",\r\n    })\r\n  );\r\n} catch (error) {\r\n  dispatch(\r\n    uiActions.showNotification({\r\n      status: \"error\",\r\n      title: \"Error!\",\r\n      message: \"Sending cart data failed!\",\r\n    })\r\n  );\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAErC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAQC,QAAQ,IAAK;IACnB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DACF,CAAC;MAED,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAD,CAAC;MACjB;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI;IAClC,CAAC;EACH,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOT,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACY,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;EACH,CAAC;AACH,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAA+D,EAC/D;IACEY,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;EAC3B,CACF,CAAC;EAED,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF,CAAC;AAED,IAAI;EACF,MAAMS,WAAW,CAAC,CAAC;EAEnBd,QAAQ,CACNF,SAAS,CAACY,gBAAgB,CAAC;IACzBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAE;EACX,CAAC,CACH,CAAC;AACH,CAAC,CAAC,OAAOM,KAAK,EAAE;EACdnB,QAAQ,CACNF,SAAS,CAACY,gBAAgB,CAAC;IACzBC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACX,CAAC,CACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}