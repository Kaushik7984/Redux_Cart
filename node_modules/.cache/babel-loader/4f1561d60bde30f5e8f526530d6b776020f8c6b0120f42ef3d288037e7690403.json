{"ast":null,"code":"import { uiActions } from \"./uiSlice\";\nexport const fetchCartData = () => {\n  return dispatch => {\n    const fetchData = async () => {\n      const response = await fet;\n    };\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n  };\n};\nconst sendRequest = async () => {\n  const response = await fetch(\"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\", {\n    method: \"PUT\",\n    body: JSON.stringify(cart)\n  });\n  if (!response.ok) {\n    throw new Error(\"Sending Cart data failed.\");\n  }\n};\ntry {\n  await sendRequest();\n  dispatch(uiActions.showNotification({\n    status: \"success\",\n    title: \"Success!\",\n    message: \"Sending cart data successfully!\"\n  }));\n} catch (error) {\n  dispatch(uiActions.showNotification({\n    status: \"error\",\n    title: \"Error!\",\n    message: \"Sending cart data failed!\"\n  }));\n}","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","response","fet","sendCartData","cart","showNotification","status","title","message","sendRequest","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["D:/ReactWithMAX/ReduxCart/src/store/cartAction.js"],"sourcesContent":["import { uiActions } from \"./uiSlice\";\r\n\r\nexport const fetchCartData = () => {\r\n    return dispatch => {\r\n        const fetchData = async () => {\r\n            const response = await fet\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"Sending...\",\r\n          message: \"Sending cart data!\",\r\n        })\r\n      );\r\n    };\r\n  };\r\n  \r\n  const sendRequest = async () => {\r\n    const response = await fetch(\r\n      \"https://reduxcart-b0d79-default-rtdb.firebaseio.com/cart.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(cart),\r\n      }\r\n    );\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(\"Sending Cart data failed.\");\r\n    }\r\n  };\r\n  \r\n  try {\r\n    await sendRequest();\r\n  \r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"success\",\r\n        title: \"Success!\",\r\n        message: \"Sending cart data successfully!\",\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"error\",\r\n        title: \"Error!\",\r\n        message: \"Sending cart data failed!\",\r\n      })\r\n    );\r\n  }"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAErC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAOC,QAAQ,IAAI;IACf,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,GAAG;IAC9B,CAAC;EACL,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOL,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;EACH,CAAC;AACH,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAC1B,+DAA+D,EAC/D;IACEC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;EAC3B,CACF,CAAC;EAED,IAAI,CAACH,QAAQ,CAACc,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF,CAAC;AAED,IAAI;EACF,MAAMP,WAAW,CAAC,CAAC;EAEnBV,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;IACzBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,UAAU;IACjBC,OAAO,EAAE;EACX,CAAC,CACH,CAAC;AACH,CAAC,CAAC,OAAOS,KAAK,EAAE;EACdlB,QAAQ,CACNF,SAAS,CAACQ,gBAAgB,CAAC;IACzBC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACX,CAAC,CACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}